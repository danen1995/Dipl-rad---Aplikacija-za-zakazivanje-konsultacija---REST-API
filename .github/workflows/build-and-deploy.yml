name: Build and Deploy to EC2

on:
  push:
    branches:
      - master

jobs:
  build:
    name: 🔧 Build JAR
    runs-on: ubuntu-latest

    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v3

      - name: ☕ Set up JDK 8 (Amazon Corretto)
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'corretto'

      - name: 🧱 Build with Maven
        run: mvn clean package -DskipTests

      - name: 📦 Upload JAR
        uses: actions/upload-artifact@v4
        with:
          name: konsultacije-app
          path: target/*.jar

  deploy:
    name: 🐧 Deploy to EC2
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: ⬇️ Download JAR
        uses: actions/download-artifact@v4
        with:
          name: konsultacije-app

      - name: 🔐 Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_KEY }}" > ~/.ssh/ec2_key.pem
          chmod 600 ~/.ssh/ec2_key.pem
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: 🚀 Deploy to EC2
        run: |
          scp -i ~/.ssh/ec2_key.pem *.jar ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:~/konsultacije-app.jar
          ssh -i ~/.ssh/ec2_key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            docker stop konsultacije-app || true
            docker rm konsultacije-app || true
            docker run -d --name konsultacije-app -p 8083:8083 \
              -e SPRING_DATASOURCE_URL=jdbc:postgresql://localhost:5432/konsultacije \
              -e SPRING_DATASOURCE_USERNAME=postgres \
              -e SPRING_DATASOURCE_PASSWORD=postgres \
              -e SPRING_MAIL_USERNAME=konsultacije.fon@gmail.com \
              -e SPRING_MAIL_PASSWORD=konsultacije.fon123 \
              amazoncorretto:8 java -jar konsultacije-app.jar
          EOF